import { GoogleGenerativeAI } from "@google/generative-ai";

// –¢–∏–ø –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
interface ChatMessage {
  role: "user" | "model";
  parts: { text: string }[];
}

// –¢–∏–ø –¥–ª—è —Ç—ñ–ª–∞ –∑–∞–ø–∏—Ç—É
interface RequestBody {
  message: string;
  history?: ChatMessage[];
}

export default defineEventHandler(async (event) => {
  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –º–µ—Ç–æ–¥ –∑–∞–ø–∏—Ç—É
  if (event.node.req.method !== "POST") {
    throw createError({
      statusCode: 405,
      statusMessage: "–ú–µ—Ç–æ–¥ –Ω–µ –¥–æ–∑–≤–æ–ª–µ–Ω–∏–π. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ POST.",
    });
  }

  const config = useRuntimeConfig();
  const apiKey = config.geminiApiKey;

  if (!apiKey) {
    console.error("GEMINI_API_KEY –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó");
    throw createError({
      statusCode: 500,
      statusMessage: "GEMINI_API_KEY –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ –∑–º—ñ–Ω–Ω–∏—Ö –æ—Ç–æ—á–µ–Ω–Ω—è.",
    });
  }

  try {
    const body: RequestBody = await readBody(event);
    const { message, history = [] } = body;

    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è –≤—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    if (!message || typeof message !== "string" || !message.trim()) {
      throw createError({
        statusCode: 400,
        statusMessage: "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º.",
      });
    }

    // –û–±–º–µ–∂–µ–Ω–Ω—è –¥–æ–≤–∂–∏–Ω–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    if (message.length > 4000) {
      throw createError({
        statusCode: 400,
        statusMessage: "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–µ. –ú–∞–∫—Å–∏–º—É–º 4000 —Å–∏–º–≤–æ–ª—ñ–≤.",
      });
    }

    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —ñ—Å—Ç–æ—Ä—ñ—ó
    if (history && (!Array.isArray(history) || history.length > 50)) {
      throw createError({
        statusCode: 400,
        statusMessage: "–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ —ñ—Å—Ç–æ—Ä—ñ—è —á–∞—Ç—É –∞–±–æ –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–∞.",
      });
    }

    const genAI = new GoogleGenerativeAI(apiKey);

    // –†–æ–∑—à–∏—Ä–µ–Ω—ñ —Å–∏—Å—Ç–µ–º–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó
    const systemInstruction = `
–¢–∏ - Humy, —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π AI-–∞—Å–∏—Å—Ç–µ–Ω—Ç –∑ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ —Ç–∞ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è. 

–ü–ï–†–°–û–ù–ê–õ–¨–ù–Ü–°–¢–¨:
- –Ü–º'—è: Humy (–∑–∞–≤–∂–¥–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–π—Å—è —Ü–∏–º —ñ–º'—è–º)
- –•–∞—Ä–∞–∫—Ç–µ—Ä: –¥—Ä—É–∂–µ–ª—é–±–Ω–∏–π, —Ç–µ—Ä–ø–µ–ª–∏–≤–∏–π, –µ–Ω—Ç—É–∑—ñ–∞—Å—Ç–∏—á–Ω–∏–π —â–æ–¥–æ –Ω–∞–≤—á–∞–Ω–Ω—è
- –§—ñ—Ä–º–æ–≤–∏–π –∑–Ω–∞–∫: –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –µ–º–æ–¥–∑—ñ ü§ñ –∫–æ–ª–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î—à—Å—è

–û–ë–õ–ê–°–¢–Ü –ï–ö–°–ü–ï–†–¢–ò–ó–ò:
üìä –ú–ê–¢–ï–ú–ê–¢–ò–ö–ê:
- –ê–ª–≥–µ–±—Ä–∞ —Ç–∞ –≥–µ–æ–º–µ—Ç—Ä—ñ—è
- –ú–∞—Ç–µ–º–∞—Ç–∏—á–Ω–∏–π –∞–Ω–∞–ª—ñ–∑
- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞ –π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å
- –î–∏—Å–∫—Ä–µ—Ç–Ω–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞
- –õ—ñ–Ω—ñ–π–Ω–∞ –∞–ª–≥–µ–±—Ä–∞
- –ß–∏—Å–ª–æ–≤—ñ –º–µ—Ç–æ–¥–∏

üíª –ü–†–û–ì–†–ê–ú–£–í–ê–ù–ù–Ø:
- –£—Å—ñ –º–æ–≤–∏ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è (Python, JavaScript, Java, C++, —Ç–æ—â–æ)
- –ê–ª–≥–æ—Ä–∏—Ç–º–∏ —Ç–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–∞–Ω–∏—Ö
- –í–µ–±-—Ä–æ–∑—Ä–æ–±–∫–∞ (Frontend/Backend)
- –ë–∞–∑–∏ –¥–∞–Ω–∏—Ö
- –ú–∞—à–∏–Ω–Ω–µ –Ω–∞–≤—á–∞–Ω–Ω—è
- –ú–æ–±—ñ–ª—å–Ω–∞ —Ä–æ–∑—Ä–æ–±–∫–∞

–ü–û–í–ï–î–Ü–ù–ö–ê –ü–†–ò –ù–ï–ü–û–î–•–û–î–Ø–©–ò–• –ü–ò–¢–ê–ù–ù–Ø–•:
–Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–∏—Ç–∞—î –ø—Ä–æ —â–æ—Å—å, —â–æ –Ω–µ —Å—Ç–æ—Å—É—î—Ç—å—Å—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ —á–∏ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π –¢–û–ß–ù–û —Ç–∞–∫:

"ü§ñ –ü—Ä–∏–≤—ñ—Ç! –Ø Humy, —ñ –º–æ—è —Å—É–ø–µ—Ä—Å–∏–ª–∞ - —Ü–µ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ —Ç–∞ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è! üìäüíª 

–Ø –Ω–µ –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ —ñ–Ω—à–∏–º–∏ —Ç–µ–º–∞–º–∏, –∞–ª–µ –∑–∞—Ç–µ –º–æ–∂—É:
‚Ä¢ –†–æ–∑–≤'—è–∑–∞—Ç–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–Ω—ñ –∑–∞–¥–∞—á—ñ –±—É–¥—å-—è–∫–æ—ó —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ
‚Ä¢ –ù–∞–ø–∏—Å–∞—Ç–∏ –∫–æ–¥ –Ω–∞ –±—É–¥—å-—è–∫—ñ–π –º–æ–≤—ñ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è  
‚Ä¢ –ü–æ—è—Å–Ω–∏—Ç–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∏ —Ç–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–∞–Ω–∏—Ö
‚Ä¢ –î–æ–ø–æ–º–æ–≥—Ç–∏ –∑ –≤–µ–±-—Ä–æ–∑—Ä–æ–±–∫–æ—é
‚Ä¢ –†–æ–∑–∫–∞–∑–∞—Ç–∏ –ø—Ä–æ –º–∞—à–∏–Ω–Ω–µ –Ω–∞–≤—á–∞–Ω–Ω—è

–©–æ –∑ —Ü—å–æ–≥–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å? –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞—Ç–∏ —á–∏ —Ä–∞—Ö—É–≤–∞—Ç–∏! üöÄ"

–°–¢–ò–õ–¨ –í–Ü–î–ü–û–í–Ü–î–ï–ô:
1. –ó–∞–≤–∂–¥–∏ –ø–æ—á–∏–Ω–∞–π –∑ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è —è–∫ Humy
2. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –µ–º–æ–¥–∑—ñ –¥–ª—è –≤—ñ–∑—É–∞–ª—å–Ω–æ–≥–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è
3. –î–∞–≤–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑ –ø—Ä–∏–∫–ª–∞–¥–∞–º–∏
4. –ü—Ä–æ–ø–æ–Ω—É–π –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–∏—Ç–∞–Ω–Ω—è –∞–±–æ —Ç–µ–º–∏
5. –î–ª—è –∫–æ–¥—É –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π markdown —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è
6. –î–ª—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —á—ñ—Ç–∫—ñ –ø–æ—è—Å–Ω–µ–Ω–Ω—è –∫—Ä–æ–∫—ñ–≤

–ü–†–ò–ö–õ–ê–î–ò –•–û–†–û–®–ò–• –í–Ü–î–ü–û–í–Ü–î–ï–ô:
- "–ü—Ä–∏–≤—ñ—Ç! Humy —Ç—É—Ç ü§ñ –î–∞–≤–∞–π—Ç–µ —Ä–æ–∑–±–µ—Ä–µ–º–æ —Ü—é –∑–∞–¥–∞—á—É –∑ –∞–ª–≥–µ–±—Ä–∏..."
- "–¶–µ –≤—ñ–¥–º—ñ–Ω–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è –ø—Ä–æ JavaScript! üíª –û—Å—å —è–∫ —Ü–µ –ø—Ä–∞—Ü—é—î..."
- "–Ø–∫ –º–∞—Ç–µ–º–∞—Ç–∏–∫, —è —Ä–∞–¥–∏–π –ø–æ—è—Å–Ω–∏—Ç–∏ —Ü—é –∫–æ–Ω—Ü–µ–ø—Ü—ñ—é! üìä"
`;

    const model = genAI.getGenerativeModel({
      model: "gemini-1.5-flash",
      systemInstruction: systemInstruction,
      generationConfig: {
        temperature: 0.7,
        topP: 0.8,
        topK: 40,
        maxOutputTokens: 1000,
      },
    });

    // –°—Ç–≤–æ—Ä—é—î–º–æ —á–∞—Ç –∑ —ñ—Å—Ç–æ—Ä—ñ—î—é
    const chat = model.startChat({
      history: history as ChatMessage[],
    });

    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ timeout
    const result = (await Promise.race([
      chat.sendMessage(message.trim()),
      new Promise((_, reject) =>
        setTimeout(() => reject(new Error("Timeout")), 30000)
      ),
    ])) as any;

    const response = await result.response;
    const text = response.text();

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
    if (!text || text.trim() === "") {
      throw new Error("–ü–æ—Ä–æ–∂–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ AI");
    }

    return {
      success: true,
      response: text,
      // –û–±–º–µ–∂—É—î–º–æ —Ä–æ–∑–º—ñ—Ä —ñ—Å—Ç–æ—Ä—ñ—ó (–æ—Å—Ç–∞–Ω–Ω—ñ 20 –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å)
      newHistory: [
        ...history.slice(-18), // –ó–∞–ª–∏—à–∞—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ 18 + 2 –Ω–æ–≤—ñ = 20
        { role: "user" as const, parts: [{ text: message.trim() }] },
        { role: "model" as const, parts: [{ text: text }] },
      ],
    };
  } catch (error) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –¥–æ Gemini API:", error);

    // –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    if (error instanceof Error) {
      console.error("–î–µ—Ç–∞–ª—ñ –ø–æ–º–∏–ª–∫–∏:", {
        name: error.name,
        message: error.message,
        stack: error.stack?.slice(0, 500),
      });
    }

    // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ä—ñ–∑–Ω—ñ –ø–æ–º–∏–ª–∫–∏ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–∏–ø—É
    if (error instanceof Error) {
      if (error.message.includes("API_KEY")) {
        throw createError({
          statusCode: 500,
          statusMessage: "–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó API.",
        });
      }

      if (error.message.includes("quota") || error.message.includes("limit")) {
        throw createError({
          statusCode: 429,
          statusMessage: "–ü–µ—Ä–µ–≤–∏—â–µ–Ω–æ –ª—ñ–º—ñ—Ç –∑–∞–ø–∏—Ç—ñ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.",
        });
      }

      if (error.message === "Timeout") {
        throw createError({
          statusCode: 408,
          statusMessage:
            "–ß–∞—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤–∏—á–µ—Ä–ø–∞–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.",
        });
      }
    }

    throw createError({
      statusCode: 500,
      statusMessage: "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –∑–∞–ø–∏—Ç—É –¥–æ AI. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.",
    });
  }
});
